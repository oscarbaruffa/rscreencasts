---
title: |
  Animal Crossing
description: |
  Topic modelling (stm package)
date: 2020-05-04
date-format: long
aliases:
  - "Animal Crossing.html"
---

Notable topics: Topic modelling (stm package)

Recorded on: 2020-05-04

Timestamps by: Alex Cookson

[View code](https://github.com/dgrtwo/data-screencasts/blob/master/animal-crossing.Rmd)

## Screencast

<div id="yt-player" data-video-id="Xt7ACiedRRI"></div>

## Timestamps

```{=html}
<div id="topics">
  <div class="topic">
    <h3 id="ts-305">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(305, this)">0:5:05</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Starting text analysis of critic reviews of Animal Crossing</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-470">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(470, this)">0:7:50</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">floor_date</span></div><div><span class="badge-packages badge bg-primary">lubridate</span></div></div>
    <div class="topic_description">
      <p>Using floor_date function from lubridate package to round dates down to nearest month (then week)</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-540">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(540, this)">0:9:00</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">unnest_tokens</span><span class="badge-functions badge bg-info">anti_join</span></div><div><span class="badge-packages badge bg-primary">tidytext</span></div></div>
    <div class="topic_description">
      <p>Using unnest_tokens function and anti_join functions from tidytext package to break reviews into individual words and remove stop words</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-635">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(635, this)">0:10:35</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Taking the average rating associated with individual words (simple approach to gauge sentiment)</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-750">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(750, this)">0:12:30</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">geom_line</span></div><div></div></div>
    <div class="topic_description">
      <p>Using geom_line and geom_point to graph ratings over time</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-880">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(880, this)">0:14:40</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">mean</span></div><div></div></div>
    <div class="topic_description">
      <p>Using mean function and logical statement to calculate percentages that meet a certain condition</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-1350">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(1350, this)">0:22:30</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">geom_text</span></div><div></div></div>
    <div class="topic_description">
      <p>Using geom_text to visualize what words are associated with positive/negative reviews</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-1620">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(1620, this)">0:27:00</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Disclaimer that this exploration is not text regression -- wine ratings screencast is a good resource for that</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-1710">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(1710, this)">0:28:30</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Starting to do topic modelling</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-1845">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(1845, this)">0:30:45</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">stm</span></div><div><span class="badge-packages badge bg-primary">stm</span></div></div>
    <div class="topic_description">
      <p>Explanation of stm function from stm package</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-2070">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(2070, this)">0:34:30</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">stm</span></div><div><span class="badge-packages badge bg-primary">stm</span></div></div>
    <div class="topic_description">
      <p>Explanation of stm function's output (topic modelling output)</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-2215">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(2215, this)">0:36:55</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Changing the number of topics from 4 to 6</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-2260">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(2260, this)">0:37:40</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Explanation of how topic modelling works conceptually</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-2455">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(2455, this)">0:40:55</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">tidy</span></div><div><span class="badge-packages badge bg-primary">broom</span></div></div>
    <div class="topic_description">
      <p>Using tidy function from broom package to find which &quot;documents&quot; (reviews) were the &quot;strongest&quot; representation of each topic</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-2690">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(2690, this)">0:44:50</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Noting that there might be a scraping issue resulting in review text being repeated</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-2765">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(2765, this)">0:46:05</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">str_sub</span></div><div></div></div>
    <div class="topic_description">
      <p>(Unsuccessfully) Using str_sub function to help fix repeated review text by locating where in the review text starts being repeated</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-2900">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(2900, this)">0:48:20</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">str_replace</span><span class="badge-functions badge bg-info">map2</span></div><div></div></div>
    <div class="topic_description">
      <p>(Unsuccessfully) Using str_replace and map2_chr functions, as well as regex cpaturing groups to fix repeated text</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-3120">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(3120, this)">0:52:00</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Looking at the association between review grade and gamma of the topic model (how &quot;strong&quot; a review represents a topic)</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-3235">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(3235, this)">0:53:55</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">cor</span></div><div></div></div>
    <div class="topic_description">
      <p>Using cor function with method = &quot;spearman&quot; to calculate correlation based on rank instead of actual values</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-3455">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(3455, this)">0:57:35</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Summary of screencast</p>

    </div>
  </div>
</div>
```
     
<script>
// 2. This code loads the IFrame Player API code asynchronously.
var tag = document.createElement("script");

tag.src = "https://www.youtube.com/iframe_api";
var firstScriptTag = document.getElementsByTagName("script")[0];
firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

// 3. This function creates an <iframe> (and YouTube player)
//    after the API code downloads.
var videoId = document.getElementById("yt-player").dataset.videoId;
var player;
function onYouTubeIframeAPIReady() {
  player = new YT.Player("yt-player", {
    height: "486",
    width: "864",
    videoId: videoId,
    playerVars: {
      "playsinline": 1
    },
    events: {
      onStateChange: function(event) {
        if (event.data == YT.PlayerState.PLAYING) {
          followTimestamps()
        }
      }
    }
  });
}

function playerSkipToTimestamp(seconds, tsElement) {
  player.seekTo(seconds, true)
  tsElement.scrollIntoView()
  document.getElementById("screencast").scrollIntoView()
}

const timestamps = Array.from(document.querySelectorAll('.topic h3[id^="ts-"]'))
  .map(el => el.id.replace('ts-', ''))

function followTimestamps() {
  if (player.getPlayerState() !== 1) {
    return
  }
  const currentTime = `${Math.floor(player.getCurrentTime())}`
  if (timestamps.includes(currentTime)) {
    const el = document.getElementById(`ts-${currentTime}`)
    if (el) {
      el.scrollIntoView()
      document.getElementById("screencast").scrollIntoView()
    }
  }
  setTimeout(followTimestamps, 1000)
}
</script>
