---
title: |
  Tennis Tournaments
description: |
  NA
date: 2019-04-08
date-format: long
aliases:
  - "Tennis Tournaments.html"
---

Notable topics: NA

Recorded on: 2019-04-08

Timestamps by: Alex Cookson

[View code](https://github.com/dgrtwo/data-screencasts/blob/master/grand-slams.Rmd)

## Screencast

<div id="yt-player" data-video-id="YWUCUfEeNJI"></div>

## Timestamps

```{=html}
<div id="topics">
  <div class="topic">
    <h3 id="ts-300">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(300, this)">0:5:00</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Identifying duplicated rows ands fixing them</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-675">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(675, this)">0:11:15</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">add_count</span><span class="badge-functions badge bg-info">fct_reorder</span></div><div></div></div>
    <div class="topic_description">
      <p>Using add_count and fct_reorder functions to order categories that are broken down into sub-categories for graphing</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-780">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(780, this)">0:13:00</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">str_to_title</span><span class="badge-functions badge bg-info">str_replace</span></div><div></div></div>
    <div class="topic_description">
      <p>Tidying graph titles (e.g., replacing underscores with spaces) using str_to_title and str_replace functions</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-900">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(900, this)">0:15:00</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">inner_join</span></div><div></div></div>
    <div class="topic_description">
      <p>Using inner_join function to merge datasets</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-930">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(930, this)">0:15:30</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">difftime</span><span class="badge-functions badge bg-info">as.numeric</span></div><div></div></div>
    <div class="topic_description">
      <p>Calculating age from date of birth using difftime and as.numeric functions</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-995">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(995, this)">0:16:35</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Adding simple calculations like mean and median into the text portion of markdown document</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-1065">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(1065, this)">0:17:45</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Looking at distribution of wins by sex using overlapping histograms</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-1135">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(1135, this)">0:18:55</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">%/%</span></div><div></div></div>
    <div class="topic_description">
      <p>Binning years into decades using truncated division %/%</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-1215">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(1215, this)">0:20:15</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">interaction</span></div><div></div></div>
    <div class="topic_description">
      <p>Splitting up boxplots so that they are separated into pairs (M/F) across a different group (decade) using interaction function</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-1230">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(1230, this)">0:20:30</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Analyzing distribution of ages across decades, looking specifically at the effect of Serena Williams (one individual having a disproportionate affect on the data, making it look like there's a trend)</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-1470">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(1470, this)">0:24:30</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Avoiding double-counting of individuals by counting their average age instead of their age at each win</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-1820">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(1820, this)">0:30:20</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Starting analysis to predict winner of Grand Slam tournaments</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-2100">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(2100, this)">0:35:00</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">row_number</span></div><div></div></div>
    <div class="topic_description">
      <p>Creating rolling count using row_number function to make a count of previous tournament experience</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-2385">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(2385, this)">0:39:45</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">cumsum</span></div><div></div></div>
    <div class="topic_description">
      <p>Creating rolling win count using cumsum function</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-2460">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(2460, this)">0:41:00</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">lag</span></div><div></div></div>
    <div class="topic_description">
      <p>Lagging rolling win count using lag function (otherwise we get information about a win before a player has actually won, for prediction purposes)</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-2610">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(2610, this)">0:43:30</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Asking, &quot;When someone is a finalist, what is their probability of winning as a function of previous tournaments won?&quot;</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-2880">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(2880, this)">0:48:00</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Asking, &quot;How does the number of wins a finalist has affect their chance of winning?&quot;</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-2940">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(2940, this)">0:49:00</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Backtesting simple classifier where person with more tournament wins is predicted to win the given tournament</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-3105">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(3105, this)">0:51:45</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Creating classifier that gives points based on how far a player got in previous tournaments</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-3175">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(3175, this)">0:52:55</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">match</span></div><div></div></div>
    <div class="topic_description">
      <p>Using match function to turn name of round reached (1st round, 2nd round, …) into a number score (1, 2, …)</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-3260">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(3260, this)">0:54:20</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">cummean</span></div><div></div></div>
    <div class="topic_description">
      <p>Using cummean function to get score of average past performance (instead of cumsum function)</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-3850">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(3850, this)">1:04:10</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Pulling names of rounds (1st round, 2nd round, … ) based on the rounded numeric score of previous performance</p>

    </div>
  </div>
</div>
```
     
<script>
// 2. This code loads the IFrame Player API code asynchronously.
var tag = document.createElement("script");

tag.src = "https://www.youtube.com/iframe_api";
var firstScriptTag = document.getElementsByTagName("script")[0];
firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

// 3. This function creates an <iframe> (and YouTube player)
//    after the API code downloads.
var videoId = document.getElementById("yt-player").dataset.videoId;
var player;
function onYouTubeIframeAPIReady() {
  player = new YT.Player("yt-player", {
    height: "486",
    width: "864",
    videoId: videoId,
    playerVars: {
      "playsinline": 1
    },
    events: {
      onStateChange: function(event) {
        if (event.data == YT.PlayerState.PLAYING) {
          followTimestamps()
        }
      }
    }
  });
}

function playerSkipToTimestamp(seconds, tsElement) {
  player.seekTo(seconds, true)
  tsElement.scrollIntoView()
  document.getElementById("screencast").scrollIntoView()
}

const timestamps = Array.from(document.querySelectorAll('.topic h3[id^="ts-"]'))
  .map(el => el.id.replace('ts-', ''))

function followTimestamps() {
  if (player.getPlayerState() !== 1) {
    return
  }
  const currentTime = `${Math.floor(player.getCurrentTime())}`
  if (timestamps.includes(currentTime)) {
    const el = document.getElementById(`ts-${currentTime}`)
    if (el) {
      el.scrollIntoView()
      document.getElementById("screencast").scrollIntoView()
    }
  }
  setTimeout(followTimestamps, 1000)
}
</script>
