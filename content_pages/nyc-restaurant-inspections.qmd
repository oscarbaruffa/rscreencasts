---
title: |
  NYC Restaurant Inspections
description: |
  Multiple t-test models (broom package), Principal Component Analysis (PCA)
date: 2018-12-10
date-format: long
aliases:
  - "NYC Restaurant Inspections.html"
---

Notable topics: Multiple t-test models (broom package), Principal Component Analysis (PCA)

Recorded on: 2018-12-10

Timestamps by: Alex Cookson

[View code](https://github.com/dgrtwo/data-screencasts/blob/master/nyc-restaurants.Rmd)

## Screencast

<div id="yt-player" data-video-id="em4FXPf4H-Y"></div>

## Timestamps

```{=html}
<div id="topics">
  <div class="topic">
    <h3 id="ts-1125">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(1125, this)">0:18:45</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">separate</span></div><div></div></div>
    <div class="topic_description">
      <p>Separating column using separate function</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-1275">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(1275, this)">0:21:15</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">distinct</span></div><div></div></div>
    <div class="topic_description">
      <p>Taking distinct observation, but keeping the remaining variables using distinct function with .keep_all argument</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-1500">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(1500, this)">0:25:00</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">nest</span><span class="badge-functions badge bg-info">t.test</span></div><div><span class="badge-packages badge bg-primary">broom</span></div></div>
    <div class="topic_description">
      <p>Using broom package and nest function to perform multiple t-tests at the same time</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-1580">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(1580, this)">0:26:20</button>
    </h3>
    <div class="topic_badges"><div></div><div><span class="badge-packages badge bg-primary">broom</span></div></div>
    <div class="topic_description">
      <p>Tidying nested t-test models using broom package</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-1620">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(1620, this)">0:27:00</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Creating TIE fighter plot of estimates of means and their confidence intervals</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-1725">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(1725, this)">0:28:45</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Recode long description using regex to remove everything after a parenthesis</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-2025">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(2025, this)">0:33:45</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">cut</span></div><div></div></div>
    <div class="topic_description">
      <p>Using cut function to manually bin data along user-specified intervals</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-2520">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(2520, this)">0:42:00</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Asking, &quot;What type of violations tend to occur more in some cuisines than others?&quot;</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-2565">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(2565, this)">0:42:45</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">semi_join</span></div><div></div></div>
    <div class="topic_description">
      <p>Using semi_join function to get the most recent inspection of all the restaurants</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-3120">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(3120, this)">0:52:00</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Asking, &quot;What violations tend to occur together?&quot;</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-3180">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(3180, this)">0:53:00</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">pairwise_cor</span></div><div><span class="badge-packages badge bg-primary">widyr</span></div></div>
    <div class="topic_description">
      <p>Using widyr package function pairwise_cor (pairwise correlation) to find co-occurrence of violation types</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-3330">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(3330, this)">0:55:30</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">widely_svd</span></div><div></div></div>
    <div class="topic_description">
      <p>Beginning of PCA (Principal Component Analysis) using widely_svd function</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-3480">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(3480, this)">0:58:00</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">widely_svd</span></div><div></div></div>
    <div class="topic_description">
      <p>Actually typing in the widely_svd function</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-3495">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(3495, this)">0:58:15</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">widely_svd</span></div><div></div></div>
    <div class="topic_description">
      <p>Reviewing and explaining output of widely_svd function</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-3690">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(3690, this)">1:01:30</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Creating graph of opposing elements of a PCA dimension</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-3720">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(3720, this)">1:02:00</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">str_sub</span></div><div></div></div>
    <div class="topic_description">
      <p>Shortening string using str_sub function</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-3840">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(3840, this)">1:04:00</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Reference to Julia Silge's PCA walkthrough using StackOverflow data: https://juliasilge.com/blog/stack-overflow-pca/</p>

    </div>
  </div>
</div>
```
     
<script>
// 2. This code loads the IFrame Player API code asynchronously.
var tag = document.createElement("script");

tag.src = "https://www.youtube.com/iframe_api";
var firstScriptTag = document.getElementsByTagName("script")[0];
firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

// 3. This function creates an <iframe> (and YouTube player)
//    after the API code downloads.
var videoId = document.getElementById("yt-player").dataset.videoId;
var player;
function onYouTubeIframeAPIReady() {
  player = new YT.Player("yt-player", {
    height: "486",
    width: "864",
    videoId: videoId,
    playerVars: {
      "playsinline": 1
    },
    events: {
      onStateChange: function(event) {
        if (event.data == YT.PlayerState.PLAYING) {
          followTimestamps()
        }
      }
    }
  });
}

function playerSkipToTimestamp(seconds, tsElement) {
  player.seekTo(seconds, true)
  tsElement.scrollIntoView()
  document.getElementById("screencast").scrollIntoView()
}

const timestamps = Array.from(document.querySelectorAll('.topic h3[id^="ts-"]'))
  .map(el => el.id.replace('ts-', ''))

function followTimestamps() {
  if (player.getPlayerState() !== 1) {
    return
  }
  const currentTime = `${Math.floor(player.getCurrentTime())}`
  if (timestamps.includes(currentTime)) {
    const el = document.getElementById(`ts-${currentTime}`)
    if (el) {
      el.scrollIntoView()
      document.getElementById("screencast").scrollIntoView()
    }
  }
  setTimeout(followTimestamps, 1000)
}
</script>
