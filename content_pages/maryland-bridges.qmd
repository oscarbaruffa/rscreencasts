---
title: |
  Maryland Bridges
description: |
  Data manipulation, Map visualization
date: 2018-11-26
date-format: long
aliases:
  - "Maryland Bridges.html"
---

Notable topics: Data manipulation, Map visualization

Recorded on: 2018-11-26

Timestamps by: Alex Cookson

[View code](https://github.com/dgrtwo/data-screencasts/blob/master/baltimore_bridges.Rmd)

## Screencast

<div id="yt-player" data-video-id="kzM-4jMh9Qs"></div>

## Timestamps

```{=html}
<div id="topics">
  <div class="topic">
    <h3 id="ts-555">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(555, this)">0:9:15</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">geom_line</span></div><div></div></div>
    <div class="topic_description">
      <p>Using geom_line to create an exploratory line graph</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-610">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(610, this)">0:10:10</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">%/%</span></div><div></div></div>
    <div class="topic_description">
      <p>Using %/% operator (truncated division) to bin years into decades (e.g., 1980, 1984, and 1987 would all become &quot;1980&quot;)</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-750">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(750, this)">0:12:30</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Converting two-digit year to four-digit year (e.g., &quot;16&quot; becomes &quot;2016&quot;) by adding 2000 to each one</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-940">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(940, this)">0:15:40</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">percent_format</span></div><div><span class="badge-packages badge bg-primary">scales</span></div></div>
    <div class="topic_description">
      <p>Using percent_format function from scales package to get nice-looking axis labels</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-1195">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(1195, this)">0:19:55</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">geom_col</span></div><div></div></div>
    <div class="topic_description">
      <p>Using geom_col to create an ordered nice bar/column graph</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-1295">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(1295, this)">0:21:35</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">replace_na</span></div><div></div></div>
    <div class="topic_description">
      <p>Using replace_na to replace NA values with &quot;Other&quot;</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-1635">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(1635, this)">0:27:15</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Starting exploration of average daily traffic</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-1745">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(1745, this)">0:29:05</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">comma_format</span></div><div><span class="badge-packages badge bg-primary">scales</span></div></div>
    <div class="topic_description">
      <p>Using comma_format function from scales package to get more readable axis labels (e.g., &quot;1e+05&quot; becomes &quot;100,000&quot;)</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-1875">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(1875, this)">0:31:15</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">cut</span></div><div></div></div>
    <div class="topic_description">
      <p>Using cut function to bin continuous variable into customized breaks (also does a mutate within a group_by!)</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-2070">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(2070, this)">0:34:30</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Starting to make a map</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-2220">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(2220, this)">0:37:00</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">scale_colour_gradient2</span></div><div></div></div>
    <div class="topic_description">
      <p>Encoding a continuous variable to colour, then using scale_colour_gradient2 function to specify colours and midpoint</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-2300">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(2300, this)">0:38:20</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">scale_colour_gradient2</span></div><div></div></div>
    <div class="topic_description">
      <p>Specifying the trans argument (transformation) of the scale_colour_gradient2 function to get a logarithmic scale</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-2755">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(2755, this)">0:45:55</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">str_to_title</span></div><div></div></div>
    <div class="topic_description">
      <p>Using str_to_title function to get values to Title Case (first letter of each word capitalized)</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-2915">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(2915, this)">0:48:35</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">glm</span></div><div></div></div>
    <div class="topic_description">
      <p>Predicting whether bridges are in &quot;Good&quot; condition using logistic regression (remember to specify the family argument! Dave fixes this at 52:54)</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-3030">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(3030, this)">0:50:30</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Explanation of why we should NOT be using an OLS linear regression</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-3070">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(3070, this)">0:51:10</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">augment</span></div><div><span class="badge-packages badge bg-primary">broom</span></div></div>
    <div class="topic_description">
      <p>Using the augment function from the broom package to illustrate why a linear model is not a good fit</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-3125">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(3125, this)">0:52:05</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">augment</span></div><div><span class="badge-packages badge bg-primary">broom</span></div></div>
    <div class="topic_description">
      <p>Specifying the type.predict argument in the augment function so that we get the actual predicted probability</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-3280">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(3280, this)">0:54:40</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Explanation of why the sigmoidal shape of logistic regression can be a drawback</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-3305">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(3305, this)">0:55:05</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Using a cubic spline model (a type of GAM, Generalized Additive Model) as an alternative to logistic regression</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-3360">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(3360, this)">0:56:00</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Explanation of the shape that a cubic spline model can take (which logistic regression cannot)</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-3735">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(3735, this)">1:02:15</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Visualizing the model in a different way, using a coefficient plot</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-3875">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(3875, this)">1:04:35</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">geom_vline</span></div><div></div></div>
    <div class="topic_description">
      <p>Using geom_vline function to add a red reference line to a graph</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-3890">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(3890, this)">1:04:50</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">tidy</span><span class="badge-functions badge bg-info">geom_errorbarh</span></div><div></div></div>
    <div class="topic_description">
      <p>Adding confidence intervals to the coefficient plot by specifying conf.int argument of tidy function and graphing using the geom_errorbarh function</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-3935">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(3935, this)">1:05:35</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Brief explanation of log-odds coefficients</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-4150">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(4150, this)">1:09:10</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Summary of screencast</p>

    </div>
  </div>
</div>
```
     
<script>
// 2. This code loads the IFrame Player API code asynchronously.
var tag = document.createElement("script");

tag.src = "https://www.youtube.com/iframe_api";
var firstScriptTag = document.getElementsByTagName("script")[0];
firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

// 3. This function creates an <iframe> (and YouTube player)
//    after the API code downloads.
var videoId = document.getElementById("yt-player").dataset.videoId;
var player;
function onYouTubeIframeAPIReady() {
  player = new YT.Player("yt-player", {
    height: "486",
    width: "864",
    videoId: videoId,
    playerVars: {
      "playsinline": 1
    },
    events: {
      onStateChange: function(event) {
        if (event.data == YT.PlayerState.PLAYING) {
          followTimestamps()
        }
      }
    }
  });
}

function playerSkipToTimestamp(seconds, tsElement) {
  player.seekTo(seconds, true)
  tsElement.scrollIntoView()
  document.getElementById("screencast").scrollIntoView()
}

const timestamps = Array.from(document.querySelectorAll('.topic h3[id^="ts-"]'))
  .map(el => el.id.replace('ts-', ''))

function followTimestamps() {
  if (player.getPlayerState() !== 1) {
    return
  }
  const currentTime = `${Math.floor(player.getCurrentTime())}`
  if (timestamps.includes(currentTime)) {
    const el = document.getElementById(`ts-${currentTime}`)
    if (el) {
      el.scrollIntoView()
      document.getElementById("screencast").scrollIntoView()
    }
  }
  setTimeout(followTimestamps, 1000)
}
</script>
