---
title: |
  Horror Movies
description: |
  ANOVA, Text mining (tidytext package), LASSO regression (glmnet package)
date: 2019-10-21
date-format: long
aliases:
  - "Horror Movies.html"
---

Notable topics: ANOVA, Text mining (tidytext package), LASSO regression (glmnet package)

Recorded on: 2019-10-21

Timestamps by: Alex Cookson

[View code](https://github.com/dgrtwo/data-screencasts/blob/master/horror-movie-ratings.Rmd)

## Screencast

<div id="yt-player" data-video-id="yFRSTlk3kRQ"></div>

## Timestamps

```{=html}
<div id="topics">
  <div class="topic">
    <h3 id="ts-255">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(255, this)">0:4:15</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">extract</span></div><div></div></div>
    <div class="topic_description">
      <p>Extracting digits (release year) from character string using regex, along with good explanation of extract function</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-480">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(480, this)">0:8:00</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">parse_number</span></div><div></div></div>
    <div class="topic_description">
      <p>Quick check on why parse_number is unable to parse some values -- is it because they are NA or some other reason?</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-585">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(585, this)">0:9:45</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Visually investigating correlation between budget and rating</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-710">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(710, this)">0:11:50</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Investigating correlation between MPAA rating (PG-13, R, etc.) and rating using boxplots</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-770">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(770, this)">0:12:50</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">pull</span></div><div></div></div>
    <div class="topic_description">
      <p>Using pull function to quickly check levels of a factor</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-810">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(810, this)">0:13:30</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Using ANOVA to check difference of variation within groups (MPAA rating) than between groups</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-940">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(940, this)">0:15:40</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">separate_rows</span></div><div></div></div>
    <div class="topic_description">
      <p>Separating genre using separate_rows function (instead of str_split and unnest)</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-1080">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(1080, this)">0:18:00</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">separate</span></div><div></div></div>
    <div class="topic_description">
      <p>Removing boilerplate &quot;Directed by...&quot; and &quot;With...&quot; part of plot variable and isolating plot, first using regex, then by using separate function with periods as separator</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-1240">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(1240, this)">0:20:40</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Unnesting word tokens, removing stop words, and counting appearances</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-1280">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(1280, this)">0:21:20</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Aggregating by word to find words that appear in high- or low-rated movies</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-1380">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(1380, this)">0:23:00</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Discussing potential confounding factors for ratings associated with specific words</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-1490">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(1490, this)">0:24:50</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Searching for duplicated movie titles</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-1550">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(1550, this)">0:25:50</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>De-duping using distinct function</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-1615">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(1615, this)">0:26:55</button>
    </h3>
    <div class="topic_badges"><div></div><div><span class="badge-packages badge bg-primary">glmnet</span></div></div>
    <div class="topic_description">
      <p>Loading in and explaining glmnet package</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-1680">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(1680, this)">0:28:00</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Using movie titles to pull out ratings using rownmaes and match functions to create an index of which rating to pull out of the original dataset</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-1750">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(1750, this)">0:29:10</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Actually using glmnet function to create lasso model</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-2045">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(2045, this)">0:34:05</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Showing built-in plot of lasso lambda against mean-squared error</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-2225">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(2225, this)">0:37:05</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Explaining when certain terms appeared in the lasso model as the lambda value dropped</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-2470">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(2470, this)">0:41:10</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Gathering all variables except for title, so that the dataset is very tall</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-2555">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(2555, this)">0:42:35</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">unite</span></div><div></div></div>
    <div class="topic_description">
      <p>Using unite function to combine two variables (better alternative to paste)</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-2745">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(2745, this)">0:45:45</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Creating a new lasso with tons of new variables other than plot words</p>

    </div>
  </div>
</div>
```
     
<script>
// 2. This code loads the IFrame Player API code asynchronously.
var tag = document.createElement("script");

tag.src = "https://www.youtube.com/iframe_api";
var firstScriptTag = document.getElementsByTagName("script")[0];
firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

// 3. This function creates an <iframe> (and YouTube player)
//    after the API code downloads.
var videoId = document.getElementById("yt-player").dataset.videoId;
var player;
function onYouTubeIframeAPIReady() {
  player = new YT.Player("yt-player", {
    height: "486",
    width: "864",
    videoId: videoId,
    playerVars: {
      "playsinline": 1
    },
    events: {
      onStateChange: function(event) {
        if (event.data == YT.PlayerState.PLAYING) {
          followTimestamps()
        }
      }
    }
  });
}

function playerSkipToTimestamp(seconds, tsElement) {
  player.seekTo(seconds, true)
  tsElement.scrollIntoView()
  document.getElementById("screencast").scrollIntoView()
}

const timestamps = Array.from(document.querySelectorAll('.topic h3[id^="ts-"]'))
  .map(el => el.id.replace('ts-', ''))

function followTimestamps() {
  if (player.getPlayerState() !== 1) {
    return
  }
  const currentTime = `${Math.floor(player.getCurrentTime())}`
  if (timestamps.includes(currentTime)) {
    const el = document.getElementById(`ts-${currentTime}`)
    if (el) {
      el.scrollIntoView()
      document.getElementById("screencast").scrollIntoView()
    }
  }
  setTimeout(followTimestamps, 1000)
}
</script>
