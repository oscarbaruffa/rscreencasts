---
title: |
  Ninja Warrior
description: |
  Log-odds with `tidylo` package, Graphing with `ggplot2`
date: 2020-12-14
date-format: long
aliases:
  - "Ninja Warrior.html"
---

Notable topics: Log-odds with `tidylo` package, Graphing with `ggplot2`

Recorded on: 2020-12-14

Timestamps by: Alex Cookson

[View code](NA)

## Screencast

<div id="yt-player" data-video-id="4AhXvMsCooM"></div>

## Timestamps

```{=html}
<div id="topics">
  <div class="topic">
    <h3 id="ts-155">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(155, this)">0:2:35</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Inspecting the dataset</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-400">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(400, this)">0:6:40</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">geom_histogram</span></div><div></div></div>
    <div class="topic_description">
      <p>Using <code>geom_histogram</code> to look at distribution of obstacles in a stage</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-545">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(545, this)">0:9:05</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">str_remove</span></div><div></div></div>
    <div class="topic_description">
      <p>Using <code>str_remove</code> function to clean stage names (remove &quot;(Regional/City)&quot;)</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-640">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(640, this)">0:10:40</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Asking, &quot;Are there obstacles that are more common in the Finals than Qualifying rounds?&quot;</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-650">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(650, this)">0:10:50</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">bind_log_odds</span></div><div><span class="badge-packages badge bg-primary">tidylo</span></div></div>
    <div class="topic_description">
      <p>Using <code>bind_log_odds</code> function from <code>tidylo</code> package to calculate log-odds of obstacles within a stage type</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-965">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(965, this)">0:16:05</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">unite</span></div><div></div></div>
    <div class="topic_description">
      <p>Using <code>unite</code> function to combine two columns</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-1100">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(1100, this)">0:18:20</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Graphing the average position of different obstacles with many, many tweaks to make it look nice</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-1390">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(1390, this)">0:23:10</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Creating a stacked bar plot of which obstacles appear in which order</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-1830">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(1830, this)">0:30:30</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Turning stacked bar plot visualization into a custom function</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-2260">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(2260, this)">0:37:40</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Asking, &quot;Is there data on how difficult an obstacle is?&quot;</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-2730">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(2730, this)">0:45:30</button>
    </h3>
    <div class="topic_badges"><div><span class="badge-functions badge bg-info">geom_tile</span></div><div></div></div>
    <div class="topic_description">
      <p>Visualizing which obstacles appear in different seasons with <code>geom_tile</code> and a lot of tweaking</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-3022">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(3022, this)">0:50:22</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Reviewing the result of the previous step (obstacles in different seasons)</p>

    </div>
  </div>
  <div class="topic">
    <h3 id="ts-3565">
      <button class="btn btn-link btn-timestamp" onClick="playerSkipToTimestamp(3565, this)">0:59:25</button>
    </h3>
    <div class="topic_badges"><div></div><div></div></div>
    <div class="topic_description">
      <p>Summary of screencast</p>

    </div>
  </div>
</div>
```
     
<script>
// 2. This code loads the IFrame Player API code asynchronously.
var tag = document.createElement("script");

tag.src = "https://www.youtube.com/iframe_api";
var firstScriptTag = document.getElementsByTagName("script")[0];
firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

// 3. This function creates an <iframe> (and YouTube player)
//    after the API code downloads.
var videoId = document.getElementById("yt-player").dataset.videoId;
var player;
function onYouTubeIframeAPIReady() {
  player = new YT.Player("yt-player", {
    height: "486",
    width: "864",
    videoId: videoId,
    playerVars: {
      "playsinline": 1
    },
    events: {
      onStateChange: function(event) {
        if (event.data == YT.PlayerState.PLAYING) {
          followTimestamps()
        }
      }
    }
  });
}

function playerSkipToTimestamp(seconds, tsElement) {
  player.seekTo(seconds, true)
  tsElement.scrollIntoView()
  document.getElementById("screencast").scrollIntoView()
}

const timestamps = Array.from(document.querySelectorAll('.topic h3[id^="ts-"]'))
  .map(el => el.id.replace('ts-', ''))

function followTimestamps() {
  if (player.getPlayerState() !== 1) {
    return
  }
  const currentTime = `${Math.floor(player.getCurrentTime())}`
  if (timestamps.includes(currentTime)) {
    const el = document.getElementById(`ts-${currentTime}`)
    if (el) {
      el.scrollIntoView()
      document.getElementById("screencast").scrollIntoView()
    }
  }
  setTimeout(followTimestamps, 1000)
}
</script>
